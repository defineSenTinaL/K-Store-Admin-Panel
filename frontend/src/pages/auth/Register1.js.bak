import React, { useState } from 'react'
import {
    Button,
    Checkbox,
    Form,
    Input,
    Select,
  } from 'antd';
  import auth  from '../../firebase,js';
  import {sendSignInLinkToEmail } from 'firebase/auth';
  import { toast, ToastContainer } from 'react-toastify';
  import 'react-toastify/dist/ReactToastify.css';

  const formItemLayout = {
    labelCol: {
      xs: {
        span: 24,
      },
      sm: {
        span: 8,
      },
    },
    wrapperCol: {
      xs: {
        span: 24,
      },
      sm: {
        span: 16,
      },
    },
  };

  const tailFormItemLayout = {
    wrapperCol: {
      xs: {
        span: 24,
        offset: 0,
      },
      sm: {
        span: 16,
        offset: 8,
      },
    },
  };


const Register = () => {
    const [form] = Form.useForm();
    const [email, setEmail] = useState("");

    const handleSubmit =  async (e) => {
        e.preventDefault()

        const config = {
            url: 'http://localhost:3000/register/complete',
            handleCodeInApp: true,
        }
        await sendSignInLinkToEmail(auth, email, config);
        toast.success(`Email is sent to ${email}. Click the link to complete your registration.`);

        // save user email in local storage
        window.localStorage.setItem('emailForRegistration', email)

        // clear the email state
        setEmail("");
    };


  return (
    <div>
    <Form {...formItemLayout}
      form={form}
      name="register"
      style={{
        maxWidth: 600,
        marginTop: 200,
        marginLeft:400,
      }}
      scrollToFirstError
      onFinish={handleSubmit}
      >
      
        <Form.Item
        name="email"
        label="E-mail"
        rules={[
          {
            type: 'email',
            message: 'The input is not valid E-mail!',
          },
          {
            required: true,
            message: 'Please input your E-mail!',
          },
        ]}
      >
        <Input type='email' value={email} onChange={(e) => setEmail(e.target.value)} autoFocus/>
      </Form.Item>

      <Form.Item
        name="password"
        label="Password"
        rules={[
          {
            required: true,
            message: 'Please input your password!',
          },
        ]}
        hasFeedback
      >
        <Input.Password />
      </Form.Item>

      <Form.Item
        name="agreement"
        valuePropName="checked"
        rules={[
          {
            validator: (_, value) =>
              value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),
          },
        ]}
        {...tailFormItemLayout}
      >
        <Checkbox>
          I have read the <a href="">agreement</a>
        </Checkbox>
      </Form.Item>
      <Form.Item {...tailFormItemLayout}>
        <Button type="primary" onSubmit={handleSubmit} >
          Register
        </Button>
      </Form.Item>
    </Form>
    </div>
  )
}

export default Register